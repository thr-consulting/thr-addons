{"version":3,"file":"static/preview.390255ee2c0b86b949c3.bundle.js","sources":["webpack:///./src/TForm.js"],"sourcesContent":["// @flow\n\nimport React, {Component} from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport {Formik} from 'formik';\nimport {Message} from 'semantic-ui-react';\n\ntype Props = {\n\t/** Render prop just like Formik's with additional arguments passed */\n\trender: any,\n\t/** The number of fields in the form. TForm can't automatically get this number. */\n\tnumFields: number,\n\t/** Used to pass in any GraphQL errors. */\n\terrors?: any,\n\t/** Called when the form submits. */\n\tonSubmit: data => void,\n};\n\n/**\n * Extends Formik to provide Semantic UI error and warning messages and field errors.\n * @class\n * @property {function} render - Render prop just like Formik's with additional arguments passed\n * @property {number} numFields - The number of fields in the form. TForm can't automatically get this number.\n * @property errors - Used to pass in any GraphQL errors.\n * @property {function} onSubmit - Called when the form submits.\n */\nexport default class TForm extends Component<Props> {\n\tstatic displayName = 'TForm';\n\n\tprops: Props;\n\n\trenderForm = args => {\n\t\tconst {errors: warnings, touched} = args;\n\t\tconst {errors, numFields, render} = this.props;\n\n\t\treturn render({\n\t\t\trenderErrors() {\n\t\t\t\tif (!errors) return null;\n\t\t\t\tconst {graphQLErrors} = errors;\n\t\t\t\treturn (\n\t\t\t\t\t<Message error>\n\t\t\t\t\t\t<Message.Header>Error</Message.Header>\n\t\t\t\t\t\t{graphQLErrors.map(err => (\n\t\t\t\t\t\t\t<p key={err.message}>{err.message}</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Message>\n\t\t\t\t);\n\t\t\t},\n\t\t\trenderWarnings() {\n\t\t\t\tif (isEmpty(warnings)) return null;\n\t\t\t\treturn (\n\t\t\t\t\t<Message warning>\n\t\t\t\t\t\t<Message.Header>Please check the following fields:</Message.Header>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{Object.keys(warnings).map(warning => (\n\t\t\t\t\t\t\t\t<li key={warning}>{warnings[warning]}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Message>\n\t\t\t\t);\n\t\t\t},\n\t\t\thasErrors() {\n\t\t\t\treturn !!errors;\n\t\t\t},\n\t\t\thasWarnings() {\n\t\t\t\treturn Object.keys(touched).length === numFields && !isEmpty(warnings);\n\t\t\t},\n\t\t\tfieldError(fieldName) {\n\t\t\t\treturn !!(touched[fieldName] && warnings[fieldName]);\n\t\t\t},\n\t\t\t...args,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {render, numFields, ...rest} = this.props;\n\t\treturn (\n\t\t\t<Formik render={this.renderForm} {...rest}/>\n\t\t);\n\t}\n}\n"],"mappings":"AAEA","sourceRoot":""}