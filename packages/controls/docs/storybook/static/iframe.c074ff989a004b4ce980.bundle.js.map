{"version":3,"file":"static/iframe.c074ff989a004b4ce980.bundle.js","sources":["webpack:///./src/date/DatePicker.EpochDate/DatePicker.EpochDate.js"],"sourcesContent":["/* eslint-disable react/prop-types */\n// @flow\n\nimport React, {Component} from 'react';\nimport {transformLocalDateToEpochInteger, transformEpochIntegerToLocalDate} from '@thx/date';\nimport {LocalDate} from 'js-joda';\nimport DatePickerLocalDate from '../DatePicker.LocalDate';\n\ntype Props = {\n\tvalue?: number,\n\tonChange?: number => void,\n};\n\n/**\n * Let's you pick a LocalDate. No time parts are recorded.\n * @class\n * @property value\n * @property onChange\n */\nexport default class DatePickerEpochDate extends Component<Props> {\n\thandleChange = (localDate: LocalDate) => {\n\t\tif (this.props.onChange) this.props.onChange(transformLocalDateToEpochInteger(localDate));\n\t};\n\n\tprops: Props;\n\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tonChange,\n\t\t\t...rest\n\t\t} = this.props;\n\n\t\tconst newProps = {...rest};\n\t\tnewProps.value = transformEpochIntegerToLocalDate(value);\n\t\tif (onChange) newProps.onChange = this.handleChange;\n\n\t\treturn (\n\t\t\t<DatePickerLocalDate {...newProps}/>\n\t\t);\n\t}\n}\n"],"mappings":"AAmBA","sourceRoot":""}