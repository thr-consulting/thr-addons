// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MaskedInput should render without throwing an error 1`] = `
<TForm
  render={[Function]}
>
  <Formik
    enableReinitialize={true}
    isInitialValid={false}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
  >
    <RenderForm
      dirty={false}
      errors={Object {}}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialValues={Object {}}
      isSubmitting={false}
      isValid={false}
      isValidating={false}
      registerField={[Function]}
      resetForm={[Function]}
      setError={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      tFormProps={
        Object {
          "render": [Function],
        }
      }
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      values={Object {}}
    >
      <AddDynamicFormInput
        fieldError={[Function]}
        label="Name(s) of account holder(s):"
        name="addDynamicFormInputs"
        onBlur={[Function]}
        setFieldValue={[Function]}
      >
        <FormikConnect(FieldArrayInner)
          name="addDynamicFormInputs"
          render={[Function]}
        >
          <FieldArrayInner
            formik={
              Object {
                "dirty": false,
                "errors": Object {},
                "handleBlur": [Function],
                "handleChange": [Function],
                "handleReset": [Function],
                "handleSubmit": [Function],
                "initialValues": Object {},
                "isSubmitting": false,
                "isValid": false,
                "isValidating": false,
                "registerField": [Function],
                "resetForm": [Function],
                "setError": [Function],
                "setErrors": [Function],
                "setFieldError": [Function],
                "setFieldTouched": [Function],
                "setFieldValue": [Function],
                "setFormikState": [Function],
                "setStatus": [Function],
                "setSubmitting": [Function],
                "setTouched": [Function],
                "setValues": [Function],
                "status": undefined,
                "submitCount": 0,
                "submitForm": [Function],
                "touched": Object {},
                "unregisterField": [Function],
                "validate": undefined,
                "validateField": [Function],
                "validateForm": [Function],
                "validateOnBlur": true,
                "validateOnChange": true,
                "validationSchema": undefined,
                "values": Object {},
              }
            }
            name="addDynamicFormInputs"
            render={[Function]}
            validateOnChange={true}
          >
            <Grid
              columns="equal"
              key="0"
              stackable={true}
            >
              <div
                className="ui stackable equal width grid"
              >
                <GridRow>
                  <div
                    className="row"
                  >
                    <GridColumn>
                      <div
                        className="column"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          style={
                            Object {
                              "marginTop": 25,
                            }
                          }
                        >
                          <FormField
                            control={[Function]}
                            style={
                              Object {
                                "marginTop": 25,
                              }
                            }
                          >
                            <div
                              className="field"
                            >
                              <Input
                                style={
                                  Object {
                                    "marginTop": 25,
                                  }
                                }
                                type="text"
                              >
                                <div
                                  className="ui input"
                                  style={
                                    Object {
                                      "marginTop": 25,
                                    }
                                  }
                                >
                                  <Button
                                    as="button"
                                    color="green"
                                    key=".0"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <Ref
                                      innerRef={
                                        Object {
                                          "current": <button
                                            class="ui green button"
                                            type="button"
                                          >
                                            Add
                                          </button>,
                                        }
                                      }
                                    >
                                      <RefFindNode
                                        innerRef={
                                          Object {
                                            "current": <button
                                              class="ui green button"
                                              type="button"
                                            >
                                              Add
                                            </button>,
                                          }
                                        }
                                      >
                                        <button
                                          className="ui green button"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Add
                                        </button>
                                      </RefFindNode>
                                    </Ref>
                                  </Button>
                                </div>
                              </Input>
                            </div>
                          </FormField>
                        </FormInput>
                      </div>
                    </GridColumn>
                    <GridColumn
                      key="addDynamicFormInputs00/.0"
                    >
                      <div
                        className="column"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={false}
                          label="First Name"
                          name="firstName"
                          onChange={[Function]}
                          value=""
                        >
                          <FormField
                            control={[Function]}
                            error={false}
                            label="First Name"
                            name="firstName"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="field"
                            >
                              <label>
                                First Name
                              </label>
                              <Input
                                name="firstName"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <div
                                  className="ui input"
                                >
                                  <input
                                    name="firstName"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </div>
                              </Input>
                            </div>
                          </FormField>
                        </FormInput>
                      </div>
                    </GridColumn>
                    <GridColumn
                      key="addDynamicFormInputs10/.1"
                    >
                      <div
                        className="column"
                      >
                        <FormInput
                          as={[Function]}
                          control={[Function]}
                          error={false}
                          label="Last Name"
                          name="lastName"
                          onChange={[Function]}
                          value=""
                        >
                          <FormField
                            control={[Function]}
                            error={false}
                            label="Last Name"
                            name="lastName"
                            onChange={[Function]}
                            value=""
                          >
                            <div
                              className="field"
                            >
                              <label>
                                Last Name
                              </label>
                              <Input
                                name="lastName"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <div
                                  className="ui input"
                                >
                                  <input
                                    name="lastName"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  />
                                </div>
                              </Input>
                            </div>
                          </FormField>
                        </FormInput>
                      </div>
                    </GridColumn>
                  </div>
                </GridRow>
              </div>
            </Grid>
          </FieldArrayInner>
        </FormikConnect(FieldArrayInner)>
      </AddDynamicFormInput>
    </RenderForm>
  </Formik>
</TForm>
`;
